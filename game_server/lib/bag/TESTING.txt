/* Testing file for bag.c */

/* Ihab Basri , CS50 , April 24th, 2016*/

/*File: bag.c - a data structure module for a collection of indistinguishable items
*
*Lab 3 Question 1 bag.c 
*
* A module that export three functions: creating a new bag, inserting items into the bag
* and removing items from the bag and returning it to the user		 
*
*Ihab Basri, CS50, Dartmouth College, April 24th, 2016*/

####################################################
#To test my bag.c modules, I used a testfile bagtest.c that will test the different functions of 
#bag.c and different scenarios where the functions could fail or return NULL.
#bagtes.c is compiled with bag.c, Makefile, and "bag" header file
####################################################

###################################################
#testing the delete function (test1)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/bag_EXTRA]$ bagtest

[hooby@wildcat ~/cs50/labs/lab3/bag_EXTRA]$ valgrind bagtest
==18407== Memcheck, a memory error detector
==18407== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==18407== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==18407== Command: bagtest
==18407==

==18407==
==18407== HEAP SUMMARY:
==18407==     in use at exit: 0 bytes in 0 blocks
==18407==   total heap usage: 5 allocs, 5 frees, 68 bytes allocated
==18407==
==18407== All heap blocks were freed -- no leaks are possible
==18407==
==18407== For counts of detected and suppressed errors, rerun with: -v
==18407== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


**** as we can see above, all the memory that have been allocated is free now
	and it will seg fault if you try to use the pointer after deleting it.

****SUCCESS