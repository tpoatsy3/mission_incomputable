/* Testing file for counters.c */

/* Ihab Basri , CS50 , April 24th, 2016*/

/*File: counters.c - a data structure module for a list of (counters
*
*Lab 3 Question 3 counters.c 
*
* A module that export three functions: creating a new counters list, adding the counters if matching keys
* getting the values of the counters for matching keys and deleting the whole structure.	 
*
*Ihab Basri, CS50, Dartmouth College, April 24th, 2016*/

####################################################
#To test my counters.c modules, I used a testfile counterstest.c that will test the different functions of 
#counters.c and different scenarios where the functions could fail or return NULL.
#counterstest.c is compiled with counters.c, Makefile, and "counters" header file
####################################################

###################################################
#creating a new pointer that points to counters list type (test1)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/counters]$ valgrind counterstest

==21732== HEAP SUMMARY:
==21732==     in use at exit: 0 bytes in 0 blocks
==21732==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==21732==
==21732== All heap blocks were freed -- no leaks are possible
==21732==
==21732== For counts of detected and suppressed errors, rerun with: -v
==21732== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

*****After running valgrind on the executable file, we notice no memory were allocated
and no errors were found -> no syntax error in creating the counters list structure.

###################################################
#creating a new counters list (test2)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/counters]$ valgrind counterstest

==22673== LEAK SUMMARY:
==22673==    definitely lost: 8 bytes in 1 blocks
==22673==    indirectly lost: 0 bytes in 0 blocks
==22673==      possibly lost: 0 bytes in 0 blocks
==22673==    still reachable: 0 bytes in 0 blocks
==22673==         suppressed: 0 bytes in 0 blocks
==22673== Rerun with --leak-check=full to see details of leaked memory
==22673==
==22673== For counts of detected and suppressed errors, rerun with: -v
==22673== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)


******After running valgrind on the executable file, we noticed 8 bytes of memory were reserved
which would suggest that a memory was allocated for the counters list (Just the dummy header file)
Also, as we will see below, the pointer returned from creating the list will be used in further testing
and if it was pointing to NULL or random location in the memory, it would have been ignored or caused seg
fault but it did not  (SUCCESS).

###################################################
#testing if the list is NULL (test3)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/counters]$ counterstest

[hooby@wildcat ~/cs50/labs/lab3/counters]$

**********Nothing (SUCCESS)

###################################################
#testing if the list received NULL as a key (test5)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/counters]$ counterstest

1 ->

**********SUCCESS


###################################################
#testing if the list received NULL as a counters pointer (test6)
####################################################
[hooby@wildcat ~/cs50/labs/lab3/counters]$ counterstest

1 ->
1 ->


***(SUCCESS)

###################################################
#//testing if incremntation happening for matching keys, or 1 for non-matching (test7)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/counters]$ counterstest

1 ->
1 ->
2 -> 3 -> 2 ->

****(SUCCESS)

###################################################
#// testing acquiring the value for matching key (test8)
####################################################

[hooby@wildcat ~/cs50/labs/lab3/counters]$ counterstest

1 ->
1 ->
2 -> 3 -> 2 ->
the counter equals 3

*****(SUCCESS)

###################################################
#testing acquiring the value for non matching key (test9)
####################################################
[hooby@wildcat ~/cs50/labs/lab3/counters]$ counterstest

1 ->
1 ->
2 -> 3 -> 2 ->
the counter equals 3
the counter equals 0

**** SUCCESS

###################################################
#deleting all the contents (test10)
####################################################


[hooby@wildcat ~/cs50/labs/lab3/counters]$ valgrind counterstest
==26010== Memcheck, a memory error detector
==26010== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26010== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==26010== Command: counterstest
==26010==

1 ->
1 ->
2 -> 3 -> 2 ->
the counter equals 3
the counter equals 0
==26010==
==26010== HEAP SUMMARY:
==26010==     in use at exit: 0 bytes in 0 blocks
==26010==   total heap usage: 4 allocs, 4 frees, 56 bytes allocated
==26010==
==26010== All heap blocks were freed -- no leaks are possible
==26010==
==26010== For counts of detected and suppressed errors, rerun with: -v
==26010== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

**** everything is freed (SUCCESS)

//end